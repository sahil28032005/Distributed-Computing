syntax = "proto3";

package raft;

// Raft service for node-to-node communication
service RaftService {
  // Append entries RPC
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
  
  // Request vote RPC
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
  
  // Install snapshot RPC
  rpc InstallSnapshot(InstallSnapshotRequest) returns (InstallSnapshotResponse);
}

// Append entries request
message AppendEntriesRequest {
  uint64 term = 1;
  string leader_id = 2;
  uint64 prev_log_index = 3;
  uint64 prev_log_term = 4;
  repeated LogEntry entries = 5;
  uint64 leader_commit = 6;
}

// Append entries response
message AppendEntriesResponse {
  uint64 term = 1;
  bool success = 2;
  uint64 match_index = 3;
}

// Request vote request
message RequestVoteRequest {
  uint64 term = 1;
  string candidate_id = 2;
  uint64 last_log_index = 3;
  uint64 last_log_term = 4;
}

// Request vote response
message RequestVoteResponse {
  uint64 term = 1;
  bool vote_granted = 2;
}

// Install snapshot request
message InstallSnapshotRequest {
  uint64 term = 1;
  string leader_id = 2;
  uint64 last_included_index = 3;
  uint64 last_included_term = 4;
  uint64 offset = 5;
  bytes data = 6;
  bool done = 7;
}

// Install snapshot response
message InstallSnapshotResponse {
  uint64 term = 1;
}

// Log entry
message LogEntry {
  uint64 term = 1;
  uint64 index = 2;
  bytes data = 3;
}